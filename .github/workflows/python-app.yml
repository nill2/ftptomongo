name: Python application

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix: 
        version: [1]

    steps:
      - name: defauld directory
        run: |
          echo "CurrentDirectory=$(pwd)" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v2
  
      - name: Install Miniconda and update dependencies
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda activate base
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda env update --file environment.yml --name base
        env:
          CONDA_HOME: $HOME/miniconda
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install tools from PyPI
        run: |
          pip install pyftpdlib
          pip install pylint
          pip install psutil
          pip install pymongo
      - name: Lint with flake8
        run: |
          cd "$CurrentDirectory"
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Set up MongoDB
        run: |
          docker run -d --name mongodb -p 27017:27017 mongo:latest
          sleep 10  # Wait for MongoDB to start
        timeout-minutes: 3
  
      - name: Create MongoDB Collection
        run: |
          # Install MongoDB client
          # apt-get update
          #apt-get install -y mongodb-clients
          
          # Wait for MongoDB to start
          sleep 10
          
          # Create a collection for testing
          #sudo -u mongodb mongo --eval 'db.createCollection("nill-home-photos")' localhost/nill-home
          python setuptstmongo.py
        timeout-minutes: 3

 #     - name: Create MongoDB User
 #       env:
 #         MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGODB_ADMIN_USER }}
 #         MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGODB_ADMIN_PASSWORD }}
 #       run: |
          # Install MongoDB client
          # sudo apt-get update
          # sudo apt-get install -y mongodb-clients
          
          # Wait for MongoDB to start
 #         sleep 10
          
          # Create a user with readWrite role
          #sudo mongo admin --host localhost --eval 'db.createUser({ user: "user", pwd: "password", roles: ["readWrite"] })'
 #         python create_collection.py
  #      timeout-minutes: 3
        
      - name: Start FTP server
        env:
          GHA_TESTS: True
        run: python ftptomongo.py &

      - name: Test with pytest
        env:
          GHA_TESTS: True
        run: |
          cd "$CurrentDirectory" 
          pip install pytest
          pytest 
