#build and image
name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      #- name: Build Docker Image
      #  run: |
      #    docker buildx create --use
      #    docker buildx build \
      #      --tag ftptomongo:latest \
      #      --file Dockerfile \
      #      .

      - name: Find and Update Version
        id: find-version
        run: |
          echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

          # Find the existing version tag, if it exists
          existing_version=$(docker pull ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest --quiet | awk -F: '{print $2}')
          
          # If the existing version tag is not empty, increase it by 0.1; otherwise, set it to 0.1
          if [ -n "$existing_version" ]; then
            new_version=$(echo "$existing_version + 0.1" | bc)
            # Format the new version to have two decimal places
            new_version=$(printf "%.2f" $new_version)
          else
            new_version="0.1"
            existing_version="0.0"
          fi

          # Output the new version
          echo "new_version:$new_version"
          echo "existing_version:$existing_version"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "existing_version=$existing_version" >> $GITHUB_ENV

        
        continue-on-error: true
    
      - name: Build Docker Image
        run: |
          echo "start creating a docker image"
          docker buildx create --use
          echo "start building a docker image"
          docker buildx build \
            --tag ftptomongo:latest \
            --tag ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest \
            --file Dockerfile \
            .

      - name: Build and Push Docker Image
        run: |
          echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest .
          # Create a second tag "version" for the same image
          docker tag ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:$new_version
          # Push both "latest" and "testtag" tags to the registry
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:$new_version    
      
      # commented out for now to keep all version    
      #- name:  Delete Existing Version
      #  id: delete-old-version
      #  run: |
      #    # If the existing version tag is found, delete it
      #    if [ -n "$existing_version" ]; then
      #      docker rmi $existing_version
      #    else
      #      echo "No existing version tag found"
      #    fi
