#build and image
name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: |
          docker buildx create --use
          docker buildx build \
            --tag ftptomongo:latest \
            --file Dockerfile \
            .
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Find and Update Version
        id: find-version
        run: |
          # Find the existing version tag, if it exists
          existing_version=$(docker pull ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest --quiet | awk -F: '{print $2}')
          
          # If the existing version tag is not empty, increase it by 0.1; otherwise, set it to 0.1
          if [ -n "$existing_version" ]; then
            new_version=$(awk "BEGIN { printf \"%.2f\", $existing_version + 0.1 }")
          else
            new_version="0.1"
          fi

          # Output the new version
          echo "::set-output name=new_version::$new_version"
        
        continue-on-error: true
    
      - name: Build and Push Docker Image
        run: |
          echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          # docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest .
          docker buildx build \
          --tag ftptomongo:latest \
          --tag ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest \
          --tag ftptomongo:$new_version \
          --file Dockerfile \
          .
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
      
      
      - name:  Delete Existing Version
        id: delete-old-version
        run: |
          # If the existing version tag is found, delete it
          if [ -n "$existing_version" ]; then
            docker rmi $existing_version
          fi
